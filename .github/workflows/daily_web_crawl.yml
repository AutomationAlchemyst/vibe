name: Daily Web Crawl

on:
  schedule:
    # Runs at 00:00 UTC, which is 8:00 AM SGT (Singapore Time)
    - cron: '0 0 * * *'
  workflow_dispatch: # Allows manual triggering from the Actions tab

jobs:
  run-web-crawl:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Or your preferred Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install feedparser openai python-dotenv gspread google-auth newspaper3k lxml_html_clean

      # --- REMOVE the old step that used 'echo' ---

      # --- ADD THIS NEW STEP using Python ---
      - name: Create Google Credentials file (using Python)
        env:
          GOOGLE_CREDS_JSON: ${{ secrets.GOOGLE_CREDENTIALS }}
        shell: python
        run: |
          import os
          import sys
          creds_json = os.environ.get('GOOGLE_CREDS_JSON')
          if not creds_json:
            print("Error: GOOGLE_CREDENTIALS secret not found.", file=sys.stderr)
            sys.exit(1)
          try:
            # Ensure the directory exists if needed (it should in this case)
            # os.makedirs(os.path.dirname("credentials2.json"), exist_ok=True)
            with open("credentials2.json", "w", encoding="utf-8") as f:
              f.write(creds_json)
            print("Successfully wrote credentials2.json using Python")
          except Exception as e:
            print(f"Error writing credentials2.json using Python: {e}", file=sys.stderr)
            sys.exit(1)
      # --- End of new step ---
      
      - name: Run the web crawl script
        run: python webcrawl/web_crawl.py
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SHEET_ID: ${{ secrets.SHEET_ID }}
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          # Note: The script loads creds.env, but we are providing secrets directly as env vars.
          # If creds.env contains other necessary variables, add them as secrets and env vars here.
